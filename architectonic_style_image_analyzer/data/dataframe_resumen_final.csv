model,parameters,recall,score
<tensorflow.python.keras.engine.functional.Functional object at 0x16efd8ed0>,"['EfficientNetB2', 'Dense', 'Dense']",0.8974358974358975,0.8974359035491943
<tensorflow.python.keras.engine.sequential.Sequential object at 0x1730d6410>,"['InputLayer', 'Rescaling', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Flatten', 'Dense', 'Dense']",0.5046604527296937,0.504660427570343
<tensorflow.python.keras.engine.sequential.Sequential object at 0x19854ed90>,"['InputLayer', 'Rescaling', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Flatten', 'Dense', 'Dense']",0.6538461538461539,0.6538461446762085
<tensorflow.python.keras.engine.sequential.Sequential object at 0x17372b310>,"['InputLayer', 'Rescaling', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Flatten', 'Dense', 'Dense']",0.591182364729459,0.5911823511123657
<tensorflow.python.keras.engine.sequential.Sequential object at 0x16ebbdf90>,"['InputLayer', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Conv2D', 'Dropout', 'Flatten', 'Dense', 'Dropout', 'Dense']",0.2198019801980198,0.219801977276802
<tensorflow.python.keras.engine.sequential.Sequential object at 0x16f54fad0>,"['InputLayer', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Conv2D', 'Dropout', 'Flatten', 'Dense', 'Dropout', 'Dense']",0.2415841584158415,0.2415841519832611
<tensorflow.python.keras.engine.functional.Functional object at 0x16f5cd090>,"['InputLayer', 'Conv2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'Conv2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'Conv2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'Conv2D', 'Conv2D', 'MaxPooling2D', 'Flatten', 'Dense', 'Dropout', 'Dense']",0.8589743589743589,0.8589743375778198
<tensorflow.python.keras.engine.sequential.Sequential object at 0x1705a3750>,"['InputLayer', 'Rescaling', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Flatten', 'Dense', 'Dense']",0.5722772277227722,0.5722772479057312
<tensorflow.python.keras.engine.sequential.Sequential object at 0x17352a550>,"['InputLayer', 'Rescaling', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Flatten', 'Dense', 'Dense']",0.4653465346534653,0.4653465449810028
<tensorflow.python.keras.engine.sequential.Sequential object at 0x1705a3310>,"['InputLayer', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'Flatten', 'Dense', 'Dense']",0.3801980198019802,0.3801980316638946
<tensorflow.python.keras.engine.sequential.Sequential object at 0x1729c4ad0>,"['InputLayer', 'Rescaling', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Flatten', 'Dense', 'Dense']",0.2,0.2000000029802322
<tensorflow.python.keras.engine.sequential.Sequential object at 0x1733f5150>,"['InputLayer', 'Rescaling', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Conv2D', 'MaxPooling2D', 'Dropout', 'Flatten', 'Dense', 'Dense']",0.5465346534653466,0.5465346574783325
"RandomForestClassifier(max_features=3, n_estimators=2000, warm_start=True)","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 3, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 2000, 'n_jobs': None, 'oob_score': False, 'random_state': None, 'verbose': 0, 'warm_start': True}",0.6099009900990099,0.6099009900990099
"RandomForestClassifier(n_estimators=300, warm_start=True)","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 300, 'n_jobs': None, 'oob_score': False, 'random_state': None, 'verbose': 0, 'warm_start': True}",0.4099009900990099,0.4099009900990099
"RandomForestClassifier(n_estimators=600, warm_start=True)","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 600, 'n_jobs': None, 'oob_score': False, 'random_state': None, 'verbose': 0, 'warm_start': True}",0.4158415841584158,0.4158415841584158
"GridSearchCV(cv=3,
             estimator=Pipeline(steps=[('classifier',
                                        RandomForestClassifier())]),
             n_jobs=-1,
             param_grid={'classifier': [KNeighborsClassifier(metric='manhattan',
                                                             n_neighbors=19,
                                                             weights='distance')],
                         'classifier__metric': ('euclidean', 'manhattan'),
                         'classifier__n_neighbors': [3, 5, 11, 19],
                         'classifier__weights': ['uniform', 'distance']},
             verbose=1)","{'cv': 3, 'error_score': nan, 'estimator__memory': None, 'estimator__steps': [('classifier', RandomForestClassifier())], 'estimator__verbose': False, 'estimator__classifier': RandomForestClassifier(), 'estimator__classifier__bootstrap': True, 'estimator__classifier__ccp_alpha': 0.0, 'estimator__classifier__class_weight': None, 'estimator__classifier__criterion': 'gini', 'estimator__classifier__max_depth': None, 'estimator__classifier__max_features': 'auto', 'estimator__classifier__max_leaf_nodes': None, 'estimator__classifier__max_samples': None, 'estimator__classifier__min_impurity_decrease': 0.0, 'estimator__classifier__min_impurity_split': None, 'estimator__classifier__min_samples_leaf': 1, 'estimator__classifier__min_samples_split': 2, 'estimator__classifier__min_weight_fraction_leaf': 0.0, 'estimator__classifier__n_estimators': 100, 'estimator__classifier__n_jobs': None, 'estimator__classifier__oob_score': False, 'estimator__classifier__random_state': None, 'estimator__classifier__verbose': 0, 'estimator__classifier__warm_start': False, 'estimator': Pipeline(steps=[('classifier', RandomForestClassifier())]), 'iid': 'deprecated', 'n_jobs': -1, 'param_grid': {'classifier': [KNeighborsClassifier(metric='manhattan', n_neighbors=19, weights='distance')], 'classifier__n_neighbors': [3, 5, 11, 19], 'classifier__weights': ['uniform', 'distance'], 'classifier__metric': ('euclidean', 'manhattan')}, 'pre_dispatch': '2*n_jobs', 'refit': True, 'return_train_score': False, 'scoring': None, 'verbose': 1}",0.403960396039604,0.403960396039604
"SVC(C=1, gamma=0.1, random_state=43)","{'C': 1, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 0.1, 'kernel': 'rbf', 'max_iter': -1, 'probability': False, 'random_state': 43, 'shrinking': True, 'tol': 0.001, 'verbose': False}",0.2752475247524752,0.2752475247524752
"RandomForestClassifier(n_estimators=5, random_state=43)","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 5, 'n_jobs': None, 'oob_score': False, 'random_state': 43, 'verbose': 0, 'warm_start': False}",0.2891089108910891,0.2891089108910891
"GridSearchCV(cv=3,
             estimator=Pipeline(steps=[('classifier', LogisticRegression())]),
             n_jobs=-1,
             param_grid={'classifier': [SVC(C=10)],
                         'classifier__C': [0.001, 1, 10],
                         'classifier__gamma': ('scale', 'auto'),
                         'classifier__kernel': ('linear', 'rbf', 'sigmoid')},
             verbose=1)","{'cv': 3, 'error_score': nan, 'estimator__memory': None, 'estimator__steps': [('classifier', LogisticRegression())], 'estimator__verbose': False, 'estimator__classifier': LogisticRegression(), 'estimator__classifier__C': 1.0, 'estimator__classifier__class_weight': None, 'estimator__classifier__dual': False, 'estimator__classifier__fit_intercept': True, 'estimator__classifier__intercept_scaling': 1, 'estimator__classifier__l1_ratio': None, 'estimator__classifier__max_iter': 100, 'estimator__classifier__multi_class': 'auto', 'estimator__classifier__n_jobs': None, 'estimator__classifier__penalty': 'l2', 'estimator__classifier__random_state': None, 'estimator__classifier__solver': 'lbfgs', 'estimator__classifier__tol': 0.0001, 'estimator__classifier__verbose': 0, 'estimator__classifier__warm_start': False, 'estimator': Pipeline(steps=[('classifier', LogisticRegression())]), 'iid': 'deprecated', 'n_jobs': -1, 'param_grid': {'classifier': [SVC(C=10)], 'classifier__kernel': ('linear', 'rbf', 'sigmoid'), 'classifier__C': [0.001, 1, 10], 'classifier__gamma': ('scale', 'auto')}, 'pre_dispatch': '2*n_jobs', 'refit': True, 'return_train_score': False, 'scoring': None, 'verbose': 1}",0.4336633663366336,0.4336633663366336
KNeighborsClassifier(),"{'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': None, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}",0.291089108910891,0.291089108910891
"RandomForestClassifier(max_features=3, n_estimators=2000, warm_start=True)","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 3, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 2000, 'n_jobs': None, 'oob_score': False, 'random_state': None, 'verbose': 0, 'warm_start': True}",0.4356435643564356,0.4356435643564356
"LogisticRegression(max_iter=10, n_jobs=-1, penalty='none', random_state=43)","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 10, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': 43, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3188118811881188,0.3188118811881188
"LogisticRegression(n_jobs=-1, penalty='none', random_state=43)","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': 43, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3445544554455445,0.3445544554455445
"LogisticRegression(max_iter=900, n_jobs=-1, penalty='none', random_state=43)","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 900, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': 43, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3445544554455445,0.3445544554455445
"RandomForestClassifier(max_features=3, n_estimators=2000, warm_start=True)","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 3, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 2000, 'n_jobs': None, 'oob_score': False, 'random_state': None, 'verbose': 0, 'warm_start': True}",0.7371794871794872,0.7371794871794872
"GridSearchCV(cv=3,
             estimator=Pipeline(steps=[('classifier',
                                        RandomForestClassifier())]),
             n_jobs=-1,
             param_grid={'classifier': [LogisticRegression(C=0.1)],
                         'classifier__C': [0.01, 0.1, 0.5, 1],
                         'classifier__penalty': ['l1', 'l2']},
             verbose=1)","{'cv': 3, 'error_score': nan, 'estimator__memory': None, 'estimator__steps': [('classifier', RandomForestClassifier())], 'estimator__verbose': False, 'estimator__classifier': RandomForestClassifier(), 'estimator__classifier__bootstrap': True, 'estimator__classifier__ccp_alpha': 0.0, 'estimator__classifier__class_weight': None, 'estimator__classifier__criterion': 'gini', 'estimator__classifier__max_depth': None, 'estimator__classifier__max_features': 'auto', 'estimator__classifier__max_leaf_nodes': None, 'estimator__classifier__max_samples': None, 'estimator__classifier__min_impurity_decrease': 0.0, 'estimator__classifier__min_impurity_split': None, 'estimator__classifier__min_samples_leaf': 1, 'estimator__classifier__min_samples_split': 2, 'estimator__classifier__min_weight_fraction_leaf': 0.0, 'estimator__classifier__n_estimators': 100, 'estimator__classifier__n_jobs': None, 'estimator__classifier__oob_score': False, 'estimator__classifier__random_state': None, 'estimator__classifier__verbose': 0, 'estimator__classifier__warm_start': False, 'estimator': Pipeline(steps=[('classifier', RandomForestClassifier())]), 'iid': 'deprecated', 'n_jobs': -1, 'param_grid': {'classifier': [LogisticRegression(C=0.1)], 'classifier__penalty': ['l1', 'l2'], 'classifier__C': [0.01, 0.1, 0.5, 1]}, 'pre_dispatch': '2*n_jobs', 'refit': True, 'return_train_score': False, 'scoring': None, 'verbose': 1}",0.3702970297029703,0.3702970297029703
"LogisticRegression(max_iter=10, n_jobs=-1, penalty='none')","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 10, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': None, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3524752475247524,0.3524752475247524
"LogisticRegression(max_iter=10, n_jobs=-1, penalty='none')","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 10, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': None, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3188118811881188,0.3188118811881188
"SVC(C=1, gamma=0.1, random_state=39095)","{'C': 1, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 0.1, 'kernel': 'rbf', 'max_iter': -1, 'probability': False, 'random_state': 39095, 'shrinking': True, 'tol': 0.001, 'verbose': False}",0.2752475247524752,0.2752475247524752
"SVC(C=1, gamma=0.1, random_state=85951)","{'C': 1, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 0.1, 'kernel': 'rbf', 'max_iter': -1, 'probability': False, 'random_state': 85951, 'shrinking': True, 'tol': 0.001, 'verbose': False}",0.2752475247524752,0.2752475247524752
"SVC(C=1, gamma=0.1, random_state=41047)","{'C': 1, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 0.1, 'kernel': 'rbf', 'max_iter': -1, 'probability': False, 'random_state': 41047, 'shrinking': True, 'tol': 0.001, 'verbose': False}",0.2752475247524752,0.2752475247524752
"SVC(C=1, gamma=0.1, random_state=85884)","{'C': 1, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 0.1, 'kernel': 'rbf', 'max_iter': -1, 'probability': False, 'random_state': 85884, 'shrinking': True, 'tol': 0.001, 'verbose': False}",0.2752475247524752,0.2752475247524752
"SVC(C=1, gamma=0.1, random_state=77579)","{'C': 1, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 0.1, 'kernel': 'rbf', 'max_iter': -1, 'probability': False, 'random_state': 77579, 'shrinking': True, 'tol': 0.001, 'verbose': False}",0.2752475247524752,0.2752475247524752
"GridSearchCV(cv=3,
             estimator=Pipeline(steps=[('classifier',
                                        RandomForestClassifier())]),
             n_jobs=-1,
             param_grid={'classifier': [RandomForestClassifier(max_features=3,
                                                               n_estimators=1000)],
                         'classifier__max_features': [1, 2, 3],
                         'classifier__n_estimators': [10, 100, 1000]},
             verbose=1)","{'cv': 3, 'error_score': nan, 'estimator__memory': None, 'estimator__steps': [('classifier', RandomForestClassifier())], 'estimator__verbose': False, 'estimator__classifier': RandomForestClassifier(), 'estimator__classifier__bootstrap': True, 'estimator__classifier__ccp_alpha': 0.0, 'estimator__classifier__class_weight': None, 'estimator__classifier__criterion': 'gini', 'estimator__classifier__max_depth': None, 'estimator__classifier__max_features': 'auto', 'estimator__classifier__max_leaf_nodes': None, 'estimator__classifier__max_samples': None, 'estimator__classifier__min_impurity_decrease': 0.0, 'estimator__classifier__min_impurity_split': None, 'estimator__classifier__min_samples_leaf': 1, 'estimator__classifier__min_samples_split': 2, 'estimator__classifier__min_weight_fraction_leaf': 0.0, 'estimator__classifier__n_estimators': 100, 'estimator__classifier__n_jobs': None, 'estimator__classifier__oob_score': False, 'estimator__classifier__random_state': None, 'estimator__classifier__verbose': 0, 'estimator__classifier__warm_start': False, 'estimator': Pipeline(steps=[('classifier', RandomForestClassifier())]), 'iid': 'deprecated', 'n_jobs': -1, 'param_grid': {'classifier': [RandomForestClassifier(max_features=3, n_estimators=1000)], 'classifier__n_estimators': [10, 100, 1000], 'classifier__max_features': [1, 2, 3]}, 'pre_dispatch': '2*n_jobs', 'refit': True, 'return_train_score': False, 'scoring': None, 'verbose': 1}",0.4237623762376237,0.4237623762376237
"RandomForestClassifier(n_estimators=1100, warm_start=True)","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 1100, 'n_jobs': None, 'oob_score': False, 'random_state': None, 'verbose': 0, 'warm_start': True}",0.4316831683168317,0.4316831683168317
"LogisticRegression(max_iter=10, n_jobs=-1, penalty='none', random_state=54185)","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 10, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': 54185, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3188118811881188,0.3188118811881188
"LogisticRegression(max_iter=10, n_jobs=-1, penalty='none', random_state=19294)","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 10, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': 19294, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3188118811881188,0.3188118811881188
"LogisticRegression(max_iter=10, n_jobs=-1, penalty='none', random_state=19966)","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 10, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': 19966, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3188118811881188,0.3188118811881188
"LogisticRegression(max_iter=10, n_jobs=-1, penalty='none', random_state=74724)","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 10, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': 74724, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3188118811881188,0.3188118811881188
"LogisticRegression(max_iter=10, n_jobs=-1, penalty='none', random_state=34541)","{'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 10, 'multi_class': 'auto', 'n_jobs': -1, 'penalty': 'none', 'random_state': 34541, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}",0.3188118811881188,0.3188118811881188
